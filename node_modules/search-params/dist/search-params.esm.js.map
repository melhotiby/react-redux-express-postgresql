{"version":3,"file":"search-params.esm.js","sources":["../src/encode.ts","../src/utils.ts","../src/index.ts"],"sourcesContent":["export type arrayFormat = 'none' | 'brackets' | 'index'\nexport type booleanFormat = 'none' | 'string' | 'unicode' | 'empty-true'\nexport type nullFormat = 'default' | 'string' | 'hidden'\n\nexport interface IOptions {\n  arrayFormat?: arrayFormat\n  booleanFormat?: booleanFormat\n  nullFormat?: nullFormat\n}\n\nexport interface IFinalOptions {\n  arrayFormat: arrayFormat\n  booleanFormat: booleanFormat\n  nullFormat: nullFormat\n}\n\nexport const makeOptions = (opts: IOptions = {}): IFinalOptions => ({\n  arrayFormat: opts.arrayFormat || 'none',\n  booleanFormat: opts.booleanFormat || 'none',\n  nullFormat: opts.nullFormat || 'default'\n})\n\nconst encodeValue = (value: any): string => encodeURIComponent(value)\n\nconst decodeValue = (value: string): string => decodeURIComponent(value)\n\nconst encodeBoolean = (\n  name: string,\n  value: boolean,\n  opts: IFinalOptions\n): string => {\n  if (opts.booleanFormat === 'empty-true' && value) {\n    return name\n  }\n\n  let encodedValue\n\n  if (opts.booleanFormat === 'unicode') {\n    encodedValue = value ? '✓' : '✗'\n  } else {\n    encodedValue = value.toString()\n  }\n\n  return `${name}=${encodedValue}`\n}\n\nconst encodeNull = (name: string, opts: IFinalOptions): string => {\n  if (opts.nullFormat === 'hidden') {\n    return ''\n  }\n\n  if (opts.nullFormat === 'string') {\n    return `${name}=null`\n  }\n\n  return name\n}\n\ntype nameEncoder = (val: string, index: number) => string\n\nconst getNameEncoder = (opts: IFinalOptions): nameEncoder => {\n  if (opts.arrayFormat === 'index') {\n    return (name: string, index: number): string => `${name}[${index}]`\n  }\n\n  if (opts.arrayFormat === 'brackets') {\n    return (name: string): string => `${name}[]`\n  }\n\n  return (name: string): string => name\n}\n\nexport const encodeArray = (\n  name: string,\n  arr: any[],\n  opts: IFinalOptions\n): string => {\n  const encodeName = getNameEncoder(opts)\n\n  return arr\n    .map((val, index) => `${encodeName(name, index)}=${encodeValue(val)}`)\n    .join('&')\n}\n\nexport const encode = (\n  name: string,\n  value: any,\n  opts: IFinalOptions\n): string => {\n  if (value === null) {\n    return encodeNull(name, opts)\n  }\n\n  if (typeof value === 'boolean') {\n    return encodeBoolean(name, value, opts)\n  }\n\n  if (Array.isArray(value)) {\n    return encodeArray(name, value, opts)\n  }\n\n  return `${name}=${encodeValue(value)}`\n}\n\nexport const decode = (\n  value: any,\n  opts: IFinalOptions\n): boolean | string | null => {\n  if (value === undefined) {\n    return opts.booleanFormat === 'empty-true' ? true : null\n  }\n\n  if (opts.booleanFormat === 'string') {\n    if (value === 'true') {\n      return true\n    }\n    if (value === 'false') {\n      return false\n    }\n  }\n\n  if (opts.booleanFormat === 'unicode') {\n    if (decodeValue(value) === '✓') {\n      return true\n    }\n    if (decodeValue(value) === '✗') {\n      return false\n    }\n  }\n\n  if (opts.nullFormat === 'string') {\n    if (value === 'null') {\n      return null\n    }\n  }\n\n  return decodeValue(value)\n}\n","export const getSearch = (path: string): string => {\n  const pos = path.indexOf('?')\n\n  if (pos === -1) {\n    return path\n  }\n\n  return path.slice(pos + 1)\n}\n\nexport const isSerialisable = (val: any): boolean => val !== undefined\n\nexport interface IParsedName {\n  hasBrackets: boolean\n  name: string\n}\n\nexport const parseName = (name: string): IParsedName => {\n  const bracketPosition = name.indexOf('[')\n  const hasBrackets = bracketPosition !== -1\n\n  return {\n    hasBrackets,\n    name: hasBrackets ? name.slice(0, bracketPosition) : name\n  }\n}\n","import { decode, encode, IOptions, makeOptions } from './encode'\nimport { getSearch, isSerialisable, parseName } from './utils'\n\nexport { IOptions }\n\nexport type SearchParams = Record<\n  string,\n  string | boolean | null | Array<string | boolean | null> | undefined\n>\n\n/**\n * Parse a querystring and return an object of parameters\n */\nexport const parse = <T extends Record<string, any> = SearchParams>(\n  path: string,\n  opts?: IOptions\n): T => {\n  const options = makeOptions(opts)\n\n  return getSearch(path)\n    .split('&')\n    .reduce<Record<string, any>>((params, param) => {\n      const [rawName, value] = param.split('=')\n      const { hasBrackets, name } = parseName(rawName)\n      const currentValue = params[name]\n      const decodedValue = decode(value, options)\n\n      if (currentValue === undefined) {\n        params[name] = hasBrackets ? [decodedValue] : decodedValue\n      } else {\n        params[name] = (Array.isArray(currentValue)\n          ? currentValue\n          : [currentValue]\n        ).concat(decodedValue)\n      }\n\n      return params\n    }, {}) as T\n}\n\n/**\n * Build a querystring from an object of parameters\n */\nexport const build = <T extends Record<string, any> = SearchParams>(\n  params: T,\n  opts?: IOptions\n): string => {\n  const options = makeOptions(opts)\n\n  return Object.keys(params)\n    .filter(paramName => isSerialisable(params[paramName]))\n    .map(paramName => encode(paramName, params[paramName], options))\n    .filter(Boolean)\n    .join('&')\n}\n\nexport interface IOmitResponse {\n  querystring: string\n  removedParams: object\n}\n\n/**\n * Remove a list of parameters from a querystring\n */\nexport const omit = (\n  path: string,\n  paramsToOmit: string[],\n  opts?: IOptions\n): IOmitResponse => {\n  const options = makeOptions(opts)\n  const searchPart = getSearch(path)\n  if (searchPart === '') {\n    return {\n      querystring: '',\n      removedParams: {}\n    }\n  }\n\n  const [kept, removed] = path.split('&').reduce<[string[], string[]]>(\n    ([left, right]: [string[], string[]], chunk: string) => {\n      const rawName = chunk.split('=')[0]\n      const { name } = parseName(rawName)\n\n      return paramsToOmit.indexOf(name) === -1\n        ? [left.concat(chunk), right]\n        : [left, right.concat(chunk)]\n    },\n    [[], []]\n  )\n\n  return {\n    querystring: kept.join('&'),\n    removedParams: parse(removed.join('&'), options)\n  }\n}\n\nexport interface IKeepResponse {\n  querystring: string\n  keptParams: object\n}\n\n/**\n * Remove a list of parameters from a querystring\n */\nexport const keep = (\n  path: string,\n  paramsToKeep: string[],\n  opts?: IOptions\n): IKeepResponse => {\n  const options = makeOptions(opts)\n  const searchPart = getSearch(path)\n  if (searchPart === '') {\n    return {\n      keptParams: {},\n      querystring: ''\n    }\n  }\n\n  const kept = path.split('&').reduce<string[]>((acc, chunk: string) => {\n    const rawName = chunk.split('=')[0]\n    const { name } = parseName(rawName)\n\n    if (paramsToKeep.includes(name)) {\n      acc.push(chunk)\n    }\n\n    return acc\n  }, [])\n\n  return {\n    keptParams: parse(kept.join('&'), options),\n    querystring: kept.join('&')\n  }\n}\n"],"names":["makeOptions","opts","arrayFormat","booleanFormat","nullFormat","encodeValue","value","encodeURIComponent","decodeValue","decodeURIComponent","encodeBoolean","name","encodedValue","toString","encodeNull","getNameEncoder","index","encodeArray","arr","encodeName","map","val","join","encode","Array","isArray","decode","undefined","getSearch","path","pos","indexOf","slice","isSerialisable","parseName","bracketPosition","hasBrackets","parse","options","split","reduce","params","param","_a","rawName","_b","currentValue","decodedValue","concat","build","Object","keys","filter","paramName","Boolean","omit","paramsToOmit","searchPart","querystring","removedParams","kept","removed","keep","paramsToKeep","keptParams","acc","chunk","includes","push"],"mappings":"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"}